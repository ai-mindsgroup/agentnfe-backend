#!/usr/bin/env python3
"""Mostra a porta OAuth que ser√° usada na autentica√ß√£o."""
import sys
from pathlib import Path

# Adiciona src ao path
sys.path.insert(0, str(Path(__file__).parent))

print("=" * 70)
print("üîç DIAGN√ìSTICO DE CONFIGURA√á√ÉO OAUTH")
print("=" * 70)

# 1. Verifica arquivo de credenciais
from src.settings import GOOGLE_DRIVE_CREDENTIALS_FILE
print(f"\nüìÑ Arquivo de credenciais: {GOOGLE_DRIVE_CREDENTIALS_FILE}")

import json
try:
    with open(GOOGLE_DRIVE_CREDENTIALS_FILE) as f:
        creds = json.load(f)
        
    if 'installed' in creds:
        print("\n‚úÖ Tipo: Aplicativo Desktop (installed)")
        redirect_uris = creds['installed'].get('redirect_uris', [])
        if redirect_uris:
            print(f"üìç URIs no arquivo JSON:")
            for uri in redirect_uris:
                print(f"   - {uri}")
        else:
            print("‚ö†Ô∏è  Nenhuma URI encontrada no arquivo JSON")
            print("   O Google vai usar porta aleat√≥ria (ex: localhost:xxxxx)")
            print("   Voc√™ precisa adicionar TODAS as portas poss√≠veis no Console")
    
    print(f"\nüîë Client ID: {creds.get('installed', {}).get('client_id', 'N/A')}")
    
except FileNotFoundError:
    print(f"‚ùå Arquivo n√£o encontrado: {GOOGLE_DRIVE_CREDENTIALS_FILE}")
except Exception as e:
    print(f"‚ùå Erro ao ler arquivo: {e}")

print("\n" + "=" * 70)
print("üí° SOLU√á√ÉO")
print("=" * 70)
print("""
Se as URIs n√£o est√£o no arquivo JSON, o Google OAuth vai gerar
uma porta aleat√≥ria. Voc√™ tem 2 op√ß√µes:

OP√á√ÉO 1 (Recomendada): Adicionar URIs gen√©ricas no Google Cloud Console
   - http://localhost:8080/
   - http://localhost:52628/
   - http://localhost/

OP√á√ÉO 2: Baixar novo arquivo JSON com URIs configuradas
   1. No Google Cloud Console, v√° em "Credenciais"
   2. Clique na sua credencial OAuth 2.0
   3. Role at√© "URIs de redirecionamento autorizados"
   4. Adicione as URIs necess√°rias
   5. Clique em SALVAR
   6. AGUARDE 2-3 MINUTOS para propagar
   7. Tente novamente
""")
