# =============================================================================
# EDA AI MINDS - TEMPLATE DE CONFIGURA√á√ÉO
# =============================================================================
# INSTRU√á√ïES:
# 1. Copie este arquivo para configs/.env
# 2. Preencha as chaves de API necess√°rias
# 3. Configure pelo menos SUPABASE + 1 LLM
# 4. Teste com: python -c "from src.settings import *; print('‚úÖ OK')"

# =============================================================================
# SUPABASE - BANCO DE DADOS VETORIAL (OBRIGAT√ìRIO)
# =============================================================================
# Substitua pelos valores do seu projeto Supabase
SUPABASE_URL=https://seu-projeto.supabase.co
SUPABASE_KEY=sua_chave_anonima_aqui

# =============================================================================
# POSTGRESQL - CONEX√ÉO DIRETA (OPCIONAL)
# =============================================================================
# Configure apenas se precisar de acesso direto ao PostgreSQL
DB_HOST=sua-instancia.pooler.supabase.com
DB_PORT=6543
DB_NAME=postgres
DB_USER=postgres.sua_referencia
DB_PASSWORD=sua_senha_postgres

# =============================================================================
# LLMS - CONFIGURE PELO MENOS UM (RECOMENDADO: GOOGLE + GROQ)
# =============================================================================

# GOOGLE GEMINI - Melhor custo-benef√≠cio
# üîó Obtenha em: https://makersuite.google.com/app/apikey
# üí° Modelos: gemini-1.5-flash (r√°pido), gemini-1.5-pro (potente)
GOOGLE_API_KEY=sua_chave_google_aqui

# GROQ - Gratuito e muito r√°pido (√≥timo para desenvolvimento)
# üîó Obtenha em: https://console.groq.com/keys  
# üí° Modelos: llama-3.1-8b-instant, llama-3.1-70b-versatile
GROQ_API_KEY=sua_chave_groq_aqui

# OPENAI - Mais caro mas confi√°vel
# üîó Obtenha em: https://platform.openai.com/api-keys
# üí° Modelos: gpt-3.5-turbo, gpt-4, gpt-4-turbo
OPENAI_API_KEY=sua_chave_openai_aqui

# =============================================================================
# SISTEMA - CONFIGURA√á√ïES GERAIS
# =============================================================================

# N√≠vel de logging: DEBUG (desenvolvimento) | INFO (produ√ß√£o) | WARNING | ERROR
LOG_LEVEL=INFO

# =============================================================================
# GUIA R√ÅPIDO DE CONFIGURA√á√ÉO
# =============================================================================
#
# CONFIGURA√á√ÉO M√çNIMA (para come√ßar):
# ‚úÖ SUPABASE_URL + SUPABASE_KEY
# ‚úÖ GOOGLE_API_KEY (recomendado) OU GROQ_API_KEY (gratuito)
#
# CONFIGURA√á√ÉO RECOMENDADA (desenvolvimento):
# ‚úÖ Todas as op√ß√µes do m√≠nimo
# ‚úÖ GROQ_API_KEY (backup r√°pido)
# ‚úÖ LOG_LEVEL=DEBUG
#
# CONFIGURA√á√ÉO PRODU√á√ÉO:
# ‚úÖ Todas as configura√ß√µes preenchidas
# ‚úÖ GOOGLE_API_KEY + OPENAI_API_KEY (redund√¢ncia)
# ‚úÖ LOG_LEVEL=INFO
# ‚úÖ Senhas seguras e rotacionadas
#
# DICAS:
# üîß Teste: python check_db.py
# üöÄ API: python api_simple.py
# üìä Demo: python examples/exemplo_orchestrator.py
# üß™ Testes: pytest tests/ -v
#
# =============================================================================
