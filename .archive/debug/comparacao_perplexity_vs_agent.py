"""
Script de an√°lise comparativa: Perplexity vs AI Minds Agent
An√°lise de variabilidade (desvio padr√£o e vari√¢ncia)
"""
import pandas as pd
import numpy as np

# Dados do Perplexity (creditcard_test_500.csv)
perplexity_data = {
    'Vari√°vel': ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10', 'V11', 'V12', 'V13', 'V14'],
    'Desvio_Padr√£o': [108.027, 1.363, 1.240, 1.046, 1.255, 1.196, 1.301, 0.859, 0.826, 0.862, 0.961, 0.991, 0.643, 0.909, 0.802],
    'Vari√¢ncia': [11669.830, 1.859, 1.537, 1.093, 1.576, 1.430, 1.692, 0.739, 0.682, 0.743, 0.924, 0.982, 0.414, 0.827, 0.644]
}

df_perplexity = pd.DataFrame(perplexity_data)

print("="*80)
print("üîç AN√ÅLISE COMPARATIVA: PERPLEXITY vs AI MINDS AGENT")
print("="*80)
print("\nüìä DADOS DO PERPLEXITY (creditcard_test_500.csv - 500 registros):")
print(df_perplexity.to_string(index=False))

print("\n\nü§ñ PROBLEMA IDENTIFICADO:")
print("-"*80)
print("O agente AI Minds retornou INTERVALO (m√≠n-m√°x) em vez de VARIABILIDADE (std, var)")
print("\nPergunta feita: 'Qual a variabilidade dos dados (desvio padr√£o, vari√¢ncia)?'")
print("Resposta dada: Tabela com M√≠nimo, M√°ximo e Amplitude")
print("\n‚ùå ERRO: O agente n√£o respondeu corretamente √† pergunta")
print("   - Esperado: Desvio padr√£o e vari√¢ncia de cada vari√°vel")
print("   - Obtido: Valores m√≠nimo e m√°ximo de cada vari√°vel")

print("\n\nüí° AN√ÅLISE T√âCNICA:")
print("-"*80)
print("1. O agente usou dados da tabela embeddings (20.000 registros)")
print("2. O Perplexity usou creditcard_test_500.csv (500 registros)")
print("3. Mesmo com datasets diferentes, o agente deveria calcular std() e var()")
print("4. O c√≥digo do agente n√£o interpretou corretamente a pergunta")

print("\n\nüîß CORRE√á√ÉO NECESS√ÅRIA:")
print("-"*80)
print("O agente deve:")
print("  1. Identificar palavras-chave: 'variabilidade', 'desvio padr√£o', 'vari√¢ncia'")
print("  2. Calcular df[col].std() e df[col].var() para cada coluna num√©rica")
print("  3. Retornar tabela com colunas: Vari√°vel | Desvio Padr√£o | Vari√¢ncia")

print("\n\nüìã VAMOS CALCULAR OS VALORES CORRETOS DO DATASET DE 500 REGISTROS:")
print("-"*80)

# Carregar o arquivo real de 500 registros
try:
    df_500 = pd.read_csv('data/creditcard_test_500.csv')
    print(f"\n‚úÖ Dataset carregado: {len(df_500)} registros, {len(df_500.columns)} colunas")
    
    # Selecionar as 15 primeiras vari√°veis
    cols_to_analyze = ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10', 'V11', 'V12', 'V13', 'V14']
    
    print("\nüìä C√ÅLCULO REAL (usando pandas):")
    print("-"*80)
    
    results = []
    for col in cols_to_analyze:
        std = df_500[col].std()
        var = df_500[col].var()
        results.append({
            'Vari√°vel': col,
            'Desvio Padr√£o (Calculado)': std,
            'Vari√¢ncia (Calculada)': var,
            'Desvio Padr√£o (Perplexity)': df_perplexity[df_perplexity['Vari√°vel'] == col]['Desvio_Padr√£o'].values[0],
            'Vari√¢ncia (Perplexity)': df_perplexity[df_perplexity['Vari√°vel'] == col]['Vari√¢ncia'].values[0],
            'Diferen√ßa Std (%)': abs(std - df_perplexity[df_perplexity['Vari√°vel'] == col]['Desvio_Padr√£o'].values[0]) / std * 100 if std > 0 else 0,
            'Diferen√ßa Var (%)': abs(var - df_perplexity[df_perplexity['Vari√°vel'] == col]['Vari√¢ncia'].values[0]) / var * 100 if var > 0 else 0
        })
    
    df_comparison = pd.DataFrame(results)
    
    print("\nüìà COMPARA√á√ÉO DETALHADA:")
    pd.set_option('display.max_columns', None)
    pd.set_option('display.width', None)
    pd.set_option('display.float_format', '{:.3f}'.format)
    print(df_comparison.to_string(index=False))
    
    print("\n\nüìä RESUMO ESTAT√çSTICO DAS DIFEREN√áAS:")
    print(f"Diferen√ßa m√©dia (Desvio Padr√£o): {df_comparison['Diferen√ßa Std (%)'].mean():.2f}%")
    print(f"Diferen√ßa m√©dia (Vari√¢ncia): {df_comparison['Diferen√ßa Var (%)'].mean():.2f}%")
    print(f"Maior diferen√ßa (Desvio Padr√£o): {df_comparison['Diferen√ßa Std (%)'].max():.2f}% ({df_comparison.loc[df_comparison['Diferen√ßa Std (%)'].idxmax(), 'Vari√°vel']})")
    print(f"Maior diferen√ßa (Vari√¢ncia): {df_comparison['Diferen√ßa Var (%)'].max():.2f}% ({df_comparison.loc[df_comparison['Diferen√ßa Var (%)'].idxmax(), 'Vari√°vel']})")
    
    if df_comparison['Diferen√ßa Std (%)'].mean() < 0.1:
        print("\n‚úÖ CONCLUS√ÉO: Valores do Perplexity est√£o CORRETOS (diferen√ßa < 0.1%)")
    else:
        print(f"\n‚ö†Ô∏è ATEN√á√ÉO: Diferen√ßa m√©dia de {df_comparison['Diferen√ßa Std (%)'].mean():.2f}% detectada")

except FileNotFoundError:
    print("\n‚ùå Arquivo data/creditcard_test_500.csv n√£o encontrado")
    print("   Execute este script a partir da raiz do projeto")

print("\n\nüéØ CONCLUS√ÉO FINAL:")
print("="*80)
print("O agente AI Minds respondeu com dados INCORRETOS para a pergunta feita.")
print("A pergunta solicitava VARIABILIDADE (std, var), mas o agente retornou INTERVALO (min, max).")
print("\nA√ß√£o recomendada:")
print("  1. Corrigir o agente para identificar corretamente a inten√ß√£o da pergunta")
print("  2. Implementar c√°lculo de .std() e .var() quando solicitado")
print("  3. Adicionar testes automatizados para perguntas sobre variabilidade")
print("="*80)
